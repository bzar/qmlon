Schema {
  root: "Schema"

  Schema {
    Property{ name: "root", type: String{} }
    Child { type: "ObjectType" }
  }

  Property {
    Property { name: "name", type: String{} }
    Property { name: "optional", type: Boolean{}, optional: true }
    Property {
      name: "type"
      optional: true
      type: [
        Object{type: "Boolean"}, Object{type: "Integer"}, Object{type: "Float"},
        Object{type: "String"}, Object{type: "List"}, Object{type: "Object"},
        List {
          type: [
            Object{type: "Boolean"},
            Object{type: "Integer"},
            Object{type: "Float"},
            Object{type: "String"},
            Object{type: "List"},
            Object{type: "Object"}
          ]
        }
      ]
    }
  }

  Child {
    Property { name: "min", type: Integer{}, optional: true }
    Property { name: "max", type: Integer{}, optional: true }
    Property { name: "type", type: String{} }
  }

  ObjectType {
    interface: true
    Property { name: "interface", type: Boolean{}, optional: true }
    Child { type: "Property" }
    Child { type: "Child" }
  }

  Boolean {
  }

  Integer {
    Property { name: "min", type: Integer{}, optional: true }
    Property { name: "max", type: Integer{}, optional: true }
  }

  Float {
    Property { name: "min", type: Float{}, optional: true }
    Property { name: "max", type: Float{}, optional: true }
  }

  String {
    Property { name: "min", type: Integer{}, optional: true }
    Property { name: "max", type: Integer{}, optional: true }
  }

  List {
    Property { name: "min", type: Integer{}, optional: true }
    Property { name: "max", type: Integer{}, optional: true }
    Property {
      name: "type",
      optional: true
      type: [
        Object{type: "Boolean"},
        Object{type: "Integer"},
        Object{type: "Float"},
        Object{type: "String"},
        Object{type: "List"},
        Object{type: "Object"},
        List {
          type: [
            Object{type: "Boolean"},
            Object{type: "Integer"},
            Object{type: "Float"},
            Object{type: "String"},
            Object{type: "List"},
            Object{type: "Object"}
          ]
        }
      ]
    }
  }

  Object {
    Property { name: "type", type: String{}, optional: true }
  }
}
